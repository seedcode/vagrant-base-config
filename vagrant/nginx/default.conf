server {
    server_name localhost;
    root /vagrant;

    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    
    listen 443 default ssl;

    ssl_certificate /etc/nginx/dummy.crt; 
    ssl_certificate_key /etc/nginx/dummy.key;

    # A VirtualBox bug forces vagrant to serve
    # corrupt files via Apache or nginx
    # The solution to that would be to turn off
    # the SendFile option in apache or nginx
    #
    # If you use apache as your main web server
    # add this directive in your httpd.conf (or apache.conf)
    # configuration file name may vary in various systems
    #
    #EnableSendfile off

    # If you use nginx as your main web server
    # add this directive in your nginx.conf

    sendfile off;

    rewrite_log on;
    index index.php index.html index.htm;
    client_max_body_size 1800M;

    #php config
    location / {
        try_files   $uri  $uri/index.html  /index.php;
    }

    # Pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000.
    location ~ \.php$ {
        # Give a 404 instead of a 'no input file specified' error if a requested .php path doesn't exist on the filesystem. 
        try_files $uri =404;

        fastcgi_pass   unix:/var/run/php5-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_intercept_errors on;
        fastcgi_read_timeout    380;

        #Params
        fastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_script_name;
        fastcgi_param  QUERY_STRING       $query_string;
        fastcgi_param  REQUEST_METHOD     $request_method;
        fastcgi_param  CONTENT_TYPE       $content_type;
        fastcgi_param  CONTENT_LENGTH     $content_length;

        fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param  REQUEST_URI        $request_uri;
        fastcgi_param  DOCUMENT_URI       $document_uri;
        fastcgi_param  DOCUMENT_ROOT      $document_root;
        fastcgi_param  SERVER_PROTOCOL    $server_protocol;
        fastcgi_param  HTTPS              $https if_not_empty;

        fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
        fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

        fastcgi_param  REMOTE_ADDR        $remote_addr;
        fastcgi_param  REMOTE_PORT        $remote_port;
        fastcgi_param  SERVER_ADDR        $server_addr;
        fastcgi_param  SERVER_PORT        $server_port;
        fastcgi_param  SERVER_NAME        $server_name;

        # PHP only, required if PHP was built with --enable-force-cgi-redirect
        fastcgi_param  REDIRECT_STATUS    200;

    }

    # Static files.
    # Set expire headers, Turn off access log
    location ~* \favicon.ico$ {
        access_log off;
        expires 1d;
        add_header Cache-Control public;
    }
    location ~ ^/(img|cjs|ccss)/ {
        access_log off;
        expires 7d;
        add_header Cache-Control public;
    }

    # Deny access to .htaccess files,
    # git & svn repositories, etc
    location ~ /(\.ht|\.git|\.svn) {
        deny  all;
    }

}
