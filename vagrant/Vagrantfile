# -*- mode: ruby -*-
# vi: set ft=ruby :

# Check for plugins and install if not.
%x(vagrant plugin install vagrant-ghost) unless Vagrant.has_plugin?('vagrant-ghost')
%x(vagrant plugin install vagrant-vbguest) unless Vagrant.has_plugin?('vagrant-vbguest')
%x(vagrant plugin install vagrant-fsnotify) unless Vagrant.has_plugin?('vagrant-fsnotify')
#https://github.com/adrienkohlbecker/vagrant-fsnotify

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # https://docs.vagrantup.com.
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8000" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 80, host: 8000, auto_correct: true
  config.vm.network "forwarded_port", guest: 443, host: 8050, auto_correct: true

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "10.10.10.10"
  config.vm.hostname = "project.tanner.dev" #change to something specific to the project

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../", "/vagrant", fsnotify: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
      vb.name = "VB Name" #Change to something spceific about your project

  #   # Customize the amount of memory on the VM:
      vb.memory = "1024"
  #   # Customize the amount of cpu's on the VM (recommend no more than 2):
      vb.cpus = 2
  #   # When using more than 1 core enable I/O APIC (Should be default but just in case we set this here):
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
  end


  # Run script as root
  config.vm.provision :shell, :path => "bootstrap.sh", privileged: true

  # Run script as user
  config.vm.provision :shell, :path => "bootstrap-user.sh", privileged: false

end
